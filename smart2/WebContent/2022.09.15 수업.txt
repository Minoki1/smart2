절차지향 언어 - c
객체지향 언어 (메모리에 올려진 언어{c언어보다 압축된 언어})
- java, python, javascript

-------------------------------------------------------------

대입 연산자
	=
	+=
	-=
	*=
	/=
	%=

비교 연산자
	==	같다
	!=	다르다 ==> db의 경우<>
	>, <, >=, <=
삼항 연산자
	데이터타입 변수이름 = (조건식) ? 참일때 반환값 : 거짓일때 반환값;

부정 연산자
	!, not

논리 연산자
	&(and), |(or),
	&&(AND), ||(or)==> 절삭연산(앞의 조건이 충족되면 뒤의 값은 절삭)

-----------------------------------------------------------------------
제어문
	조건문
	==> 조건이 맞으면 실행부를 실행시켜주는 명령
종류 ]
	if : 참 일때만 처리
 	==> 조건이 참 일 경우만 실행하도록 하는 조건문
	
	형식 [
		(1)
		if(조건식 (2)){
			실행내용.... (3)
		}
		(4)

	조건식이 참 일경우 실행순서
	1 --> 2--> 3--> 4
	조건식이 거짓일 경우 실행순서
	1 --> 2--> 4
-----------------------------------------------------------------------

	if ~ else : 참, 거짓일 때 (2가지로 분류) 모두 처리하는 조건 명령
	==> 조건이 참일 경우와 거짓일 경우를 각각 실행 내용을
	    정의해서 각각 실행 되도록 하는 조건 명령
형식 ] 
	(1)
	if(조건식 (2)){
		실행내용 (3)
	} else {
		실행내용 (4)
	}
	(5)
	
	실행순서
		참
		1 --> 2--> 3--> 5
		거짓
		1 --> 2--> 4--> 5
-----------------------------------------------------------------------

	if ~ else if ~ else
	==> 조건이 여러개일 경우 처리내용을 각각 처리하는 조건 명령
형식 ] 
	(1)
	if(조건식 (2)){
		실행내용 (3)
	} else if(조건식 (4)){
		실행내용 (5)
	} else if(조건식 (6))
		실행내용 (7)
	...

	} else {
		실행내용 (n)
	}
	(n+1)
	실행순서
		조건식(2)가 참일경우
		1--> 2--> 3--> (n+1)
		조건식(4)가 참일 경우(==> 조건식 (2) 는 거짓이라는 전재가 깔려있다.
		1--> 2--> 4--> 5--> (n+1)
		주어진 조건이 모두 거짓인 경우
		1--> 2--> 4--> 6-->...--> (n+1)
-----------------------------------------------------------------------
	switch ~ case
	==> 조건이 여러개일 경우 처리, 동등비교연산을 수행한다.
	(1)
	switch(변수 또는 데이터){
	case 데이터1:
		실행내용1;
		break; ==> ★★★★★ 반드시 와야한다.
	case 데이터2:
		실행내용2;
		break;

	......
	default:
		실행내용 n

	}

	예제0 ]
	int no = 3;
	
	switch(no){
	case 0:
		Serial.println("0입니다.");
		break;
	case 1:
		Serial.println("1입니다.");
		break;
	case 2:
		Serial.println("2입니다.");
		break;
	default:
		Serial.println("너무 큰 수 입니다.");
	}

	예제1 ]
	int no = 1;
	
	switch(no){
	case 0:
		Serial.println("0입니다.");
		break;
	case 1:
		Serial.println("1입니다.");
	case 2:
		Serial.println("2입니다.");
	default:
		Serial.println("너무 큰 수 입니다.");
	}

결과 = 1입니다
	2입니다
	너무 큰 수 입니다.
	[break가 없어서 하위 조건값이 다 나옴]

***braek 명령
==> 반복문, switch~case 명령에서만 사용하는 명령으로 
    실행중인 반복문 또는 switch문을 즉시 종료하라는 명령

=========================================================================	
	반복문
	==> 명령을 반복해서 실행시켜주는 명령
